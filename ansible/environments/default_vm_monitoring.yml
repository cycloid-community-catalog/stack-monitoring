# General variables
external_url_schema: "{% if use_ssl %}https{% else %}http{% endif %}"
use_ssl: true
create_self_signed_certificate: true

# Prometheus role
# all defaults here: https://github.com/prometheus-community/ansible/blob/main/roles/prometheus/defaults/main.yml
prometheus_storage_retention: "60d"
prometheus_config_dir: /etc/prometheus
prometheus_db_dir: /var/lib/prometheus
prometheus_web_listen_address: "0.0.0.0:9090"
prometheus_user: "{{organization}}"
prometheus_web_external_url: "{{ external_url_schema }}://{{ prometheus_domain_name }}"
prometheus_external_labels: {}
prometheus_global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s

prometheus_scrape_configs_global:
  ## Prometheus
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          Name: "prometheus"
          project: "{{ project }}"
          env: "{{ env }}"
          role: "{{ role }}"
          organization: "{{ organization }}"

    metric_relabel_configs:
    # Not store unwanted metrics
    - source_labels: [__name__]
      action: drop
      regex: go_(.*)

prometheus_scrape_configs_alertmanager:
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['localhost:9093']

    metric_relabel_configs:
    # Don't store unwanted metrics
    - source_labels: [__name__]
      action: drop
      regex: go_(.*)

# merge default scrapings with custom ones
prometheus_scrape_configs: "{{ prometheus_scrape_configs_global + prometheus_custom_configs + (prometheus_scrape_configs_alertmanager if  alertmanager_install else []) + (prometheus_blackbox_config if blackbox_exporter_install else [])}}"

prometheus_alerting_local:
  - scheme: http
    static_configs:
    - targets:
      - "localhost:9093"

prometheus_alerting_external:
  -   basic_auth:
          password: "{{external_alertmanager_password}}"
          username: "{{external_alertmanager_username}}"
      scheme: https
      static_configs:
      - targets:"{{external_alertmanager_targets}}"

prometheus_alertmanager_config: "{{ prometheus_alerting_local if alertmanager_install else prometheus_alerting_external }}"

# TODO replace default alert rules prometheus_alert_rules with ours https://github.com/prometheus-community/ansible/blob/main/roles/prometheus/defaults/main.yml#L105
# TODO add default_alert_rules true/false


# Alertmanager role
# default values: https://github.com/prometheus-community/ansible/blob/main/roles/alertmanager/defaults/main.yml
alertmanager_web_external_url: "{{ external_url_schema }}://{{ alertmanager_domain_name }}"
alertmanager_web_listen_address: '0.0.0.0:9093'
alertmanager_user: "{{organization}}"

# TODO copy default templates to folder
# TODO if required global config https://github.com/prometheus-community/ansible/blob/main/roles/alertmanager/templates/alertmanager.yml.j2#L3
# TODO if required time intervals -> alertmanager_time_intervals: []


# Blackbox exporter role
# all defaults here: https://github.com/prometheus-community/ansible/blob/main/roles/blackbox_exporter/defaults/main.yml
blackbox_exporter_web_listen_address: "0.0.0.0:9115"
blackbox_exporter_config_dir: /etc/blackbox_exporter


# Mysql exporter role
# # defaults at https://github.com/prometheus-community/ansible/blob/main/roles/mysqld_exporter/defaults/main.yml
mysqld_exporter_web_listen_address: "0.0.0.0:9104"
mysqld_exporter_config_dir: "/etc/mysqld_exporter"
mysqld_exporter_version: "0.15.0"
mysqld_exporter_user: "{{mysql_db_user}}"
mysqld_exporter_password: "{{mysql_db_password}}"
mysqld_exporter_host: "{{mysql_db_host}}"
mysqld_exporter_port: "{{mysql_db_port}}"

# Postgresql exporter role
# defaults at https://github.com/prometheus-community/ansible/blob/main/roles/postgres_exporter/defaults/main.yml
postgres_exporter_web_listen_address: "0.0.0.0:9187"
postgres_exporter_config_dir: "/etc/postgres_exporter"
postgres_exporter_user: "{{postgres_db_user}}"
postgres_exporter_password: "{{postgres_db_password}}"
postgres_exporter_host: "{{postgres_db_host}}"
postgres_exporter_port: "{{postgres_db_port}}"


# Node-exporter role
# defaults at https://github.com/prometheus-community/ansible/blob/main/roles/node_exporter/defaults/main.yml
node_exporter_web_listen_address: "0.0.0.0:9100"


# NGINX

prometheus_certificate_name: tls.crt
prometheus_certificate_key_name: tls.key
alertmanager_certificate_name: "{{ prometheus_certificate_name }}"
alertmanager_certificate_key_name: "{{ prometheus_certificate_key_name }}"
grafana_certificate_name: "{{ prometheus_certificate_name }}"
grafana_certificate_key_name: "{{ prometheus_certificate_key_name }}"

certificates_src: "{{ playbook_dir }}/files/nginx/ssl/*"
certificates_dest: "/etc/nginx/ssl"

nginx_configs:
  proxy:
    - proxy_set_header X-Real-IP  $remote_addr
    - proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for
  gzip:
    - gzip on
    - gzip_disable msie6
  global:
    - client_max_body_size 5m
  misc:
    - server_names_hash_max_size 512
    - server_names_hash_bucket_size 128

nginx_remove_sites:
  - default

nginx_status_http:
  00-status:
    - listen 80
    - server_name 127.0.0.1
    - location / {
       deny all;
      }
    - location /nginx_status {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        deny all;
      }

nginx_status_https:
  00-status:
    - listen 80
    - server_name 127.0.0.1
    - location / {
       deny all;
      }
    - location /nginx_status {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        deny all;
      }

nginx_grafana_http:
  07-grafana-80:
    - listen 80
    - server_name {{ grafana_domain_name }}
    # - auth_basic            "Restricted"
    # - auth_basic_user_file  auth_basic/grafana
    - location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header   X-FORWARDED_PROTO http;
        proxy_set_header   X-FORWARDED_PORT 80;
      }
nginx_grafana_https:
  07-grafana-443:
    - listen 443 ssl
    - server_name {{ grafana_domain_name }}
    - ssl_certificate  {{ certificates_dest }}/{{ grafana_certificate_name }}
    - ssl_certificate_key {{ certificates_dest }}/{{ grafana_certificate_key_name }}

    # - auth_basic            "Restricted"
    # - auth_basic_user_file  auth_basic/grafana
    - location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header   X-FORWARDED_PROTO http;
        proxy_set_header   X-FORWARDED_PORT 80;
      }

nginx_prometheus_http:
  08-prometheus-80:
    - listen 80
    - server_name {{ prometheus_domain_name }}
    - auth_basic            "Restricted"
    - auth_basic_user_file  auth_basic/prometheus
    - location / {
        proxy_pass http://127.0.0.1:9090;
        proxy_set_header   X-FORWARDED_PROTO http;
        proxy_set_header   X-FORWARDED_PORT 80;
      }
nginx_prometheus_https:
  12-prometheus-443:
     - listen 443 ssl default_server
     - server_name {{ prometheus_domain_name }}
     - ssl_certificate  {{ certificates_dest }}/{{ prometheus_certificate_name }}
     - ssl_certificate_key {{ certificates_dest }}/{{ prometheus_certificate_key_name }}
     - auth_basic            "Restricted"
     - auth_basic_user_file  auth_basic/prometheus
     - location / {
         proxy_pass http://127.0.0.1:9090;
         proxy_set_header   X-FORWARDED_PROTO https;
         proxy_set_header   X-FORWARDED_PORT 443;
       }

nginx_alertmanager_http:
  09-alertmanager-80:
    - listen 80
    - server_name {{ alertmanager_domain_name }}
    - auth_basic            "Restricted"
    - auth_basic_user_file  auth_basic/alertmanager
    - location / {
        proxy_pass http://127.0.0.1:9093;
        proxy_set_header   X-FORWARDED_PROTO http;
        proxy_set_header   X-FORWARDED_PORT 80;
      }
nginx_alertmanager_https:
  13-alertmanager-443:
     - listen 443 ssl
     - server_name {{ alertmanager_domain_name }}
     - ssl_certificate  {{ certificates_dest }}/{{ alertmanager_certificate_name }}
     - ssl_certificate_key {{ certificates_dest }}/{{ alertmanager_certificate_key_name }}
     - auth_basic            "Restricted"
     - auth_basic_user_file  auth_basic/alertmanager
     - location / {
         proxy_pass http://127.0.0.1:9093;
         proxy_set_header   X-FORWARDED_PROTO https;
         proxy_set_header   X-FORWARDED_PORT 443;
       }

nginx_force_https:
  10-force-https:
     - listen 80 default_server
     - return 301 https://$host$request_uri

nginx_sites_default: "{{
          nginx_status_http
          | combine(nginx_grafana_http if (grafana_install| default(true)) else {})
          | combine(nginx_prometheus_http if (prometheus_install| default(false)) else {})
          | combine(nginx_alertmanager_http if (alertmanager_install| default(true)) else {})
        }}"
nginx_sites_default_https: "{{
          nginx_status_https
          | combine(nginx_force_https)
          | combine(nginx_grafana_https if (grafana_install| default(true)) else {})
          | combine(nginx_prometheus_https if (prometheus_install| default(false)) else {})
          | combine(nginx_alertmanager_https if (alertmanager_install| default(true)) else {})
        }}"

nginx_sites: "{% if not use_ssl %}{{ nginx_sites_default }}{% else %}{{ nginx_sites_default_https }}{% endif %}"

nginx_auth_basic_files:
  prometheus:
    - "{{ prometheus_web_login | default('') }}"
  alertmanager:
    - "{{ alertmanager_web_login | default('') }}"
  grafana:
    - "{{ grafana_web_login | default('') }}"


# Grafana
grafana_logs_dir: "/var/log/grafana"
grafana_data_dir: "/var/lib/grafana"
grafana_database:
  type: sqlite3
grafana_address: "0.0.0.0"
grafana_port: 3000
grafana_user: "{{organization}}"
grafana_security:
  admin_user: "admin"
  admin_password: "{{grafana_admin_password}}"
grafana_default_prometheus_datasource:
  - name: prometheus
    type: prometheus
    access: proxy
    url: 'http://127.0.0.1:9090'
    basicAuth: false
    isDefault: true
    version: 1
grafana_datasources: "{{
    (grafana_extra_datasources | default([]))
    + (grafana_default_prometheus_datasource if (prometheus_install | default(true)) else [])
  }}"
grafana_dashboards_dir: "dashboards"
grafana_dashboards_files: "{{ playbook_dir }}/files/grafana/dashboards/*.json"
