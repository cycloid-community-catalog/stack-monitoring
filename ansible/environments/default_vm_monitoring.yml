##
# Variables defined as outputs in terraform
##
prometheus_web_login: "{{prometheus_basic_auth_httpwd}}"
prometheus_user: "{{prometheus_basic_auth_username}}"
prometheus_password: "{{prometheus_basic_auth_password}}"
alertmanager_web_login: "{{alertmanager_basic_auth_httpwd}}"
alertmanager_user: "{{alertmanager_basic_auth_username}}"
alertmanager_password: "{{alertmanager_basic_auth_password}}"
grafana_admin_user: "{{grafana_basic_auth_username}}"
grafana_admin_pwd: "{{grafana_basic_auth_password}}"

##
# variables passed in pipeline (cycloid-credentials)
##
#external_alertmanager_password: ((external_alertmanager_password))
#external_alertmanager_username: ((external_alertmanager_username))
#external_alertmanager_targets: ((external_alertmanager_targets))
#alertmanager_receivers_raw: ((alertmanager_receivers_yaml))
alertmanager_receivers: "{{alertmanager_receivers_raw| from_yaml}}"
#postgres_db_user: ((postgres_db_user))
#postgres_db_password: ((postgres_db_password))
#postgres_db_host: ((postgres_db_host))
#postgres_db_port: ((postgres_db_port))
#mysql_db_user: ((mysql_db_user))
#mysql_db_password: ((mysql_db_password))
#mysql_db_host: ((mysql_db_host))
#mysql_db_port: ((mysql_db_port))
#aws_default_region: ((aws_default_region))

##
# General variables
##
external_url_schema: "{% if enable_tls %}https{% else %}http{% endif %}"
use_ssl: "{{enable_tls}}"
create_self_signed_certificate: true

##
# Blackbox exporter role
# Defaults here: https://github.com/prometheus-community/ansible/blob/main/roles/blackbox_exporter/defaults/main.yml
##
blackbox_exporter_web_listen_address: "0.0.0.0:9115"
blackbox_exporter_config_dir: /etc/blackbox_exporter

##
# Mysql exporter role
# Defaults at https://github.com/prometheus-community/ansible/blob/main/roles/mysqld_exporter/defaults/main.yml
##
mysqld_exporter_web_listen_address: "0.0.0.0:9104"
mysqld_exporter_config_dir: "/etc/mysqld_exporter"
mysqld_exporter_username: "{{mysql_db_user}}"
mysqld_exporter_password: "{{mysql_db_password}}"
mysqld_exporter_host: "{{mysql_db_host}}"
mysqld_exporter_port: "{{mysql_db_port}}"

##
# Postgresql exporter role
# Defaults at https://github.com/prometheus-community/ansible/blob/main/roles/postgres_exporter/defaults/main.yml
##
postgres_exporter_web_listen_address: "0.0.0.0:9187"
postgres_exporter_config_dir: "/etc/postgres_exporter"
postgres_exporter_username: "{{postgres_db_user}}"
postgres_exporter_password: "{{postgres_db_password}}"
postgres_exporter_host: "{{postgres_db_host}}"
postgres_exporter_port: "{{postgres_db_port}}"

##
# Node-exporter role
# Defaults at https://github.com/prometheus-community/ansible/blob/main/roles/node_exporter/defaults/main.yml
##
node_exporter_web_listen_address: "0.0.0.0:9100"

##
# cAdvisor role
## Defaults at https://github.com/prometheus-community/ansible/blob/main/roles/cadvisor/defaults/main.yml
##
cadvisor_listen_ip: "0.0.0.0"
cadvisor_port: "8080"
cadvisor_docker_only: true

##
# Prometheus role
# Defaults here: https://github.com/prometheus-community/ansible/blob/main/roles/prometheus/defaults/main.yml
##
prometheus_config_dir: /etc/prometheus
prometheus_db_dir: /var/lib/prometheus
prometheus_web_listen_address: "0.0.0.0:9090"
prometheus_web_external_url: "{{ external_url_schema }}://{{ prometheus_domain_name }}"
prometheus_external_labels: {}
prometheus_global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s
prometheus_scrape_configs_global:
  ## Prometheus
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          Name: "prometheus"
          project: "{{ project }}"
          env: "{{ env }}"
          role: "{{ role }}"
          organization: "{{ organization }}"

    metric_relabel_configs:
    # Not store unwanted metrics
    - source_labels: [__name__]
      action: drop
      regex: go_(.*)
prometheus_scrape_config_alertmanager:
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['localhost:9093']

    metric_relabel_configs:
    # Don't store unwanted metrics
    - source_labels: [__name__]
      action: drop
      regex: go_(.*)
prometheus_mysql_exporter_config:
  - job_name: 'mysqld-exporter'
    static_configs:
      - targets: ["localhost:9104"]

    metric_relabel_configs:
    # Don't store unwanted metrics
    - source_labels: [__name__]
      action: drop
      regex: go_(.*)
prometheus_postgres_exporter_config:
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ["localhost:9187"]

    metric_relabel_configs:
    # Don't store unwanted metrics
    - source_labels: [__name__]
      action: drop
      regex: go_(.*)
prometheus_local_cadvisor_config:
  ## Prometheus
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['localhost:8080']
        labels:
          Name: "local cadvisor"
          project: "{{ project }}"
          env: "{{ env }}"
          role: "{{ role }}"
          organization: "{{ organization }}"

    metric_relabel_configs:
    # Not store unwanted metrics
    - source_labels: [__name__]
      action: drop
      regex: go_(.*)
# merge default scrapings with custom ones
prometheus_scrape_configs: "{{ prometheus_scrape_configs_global + prometheus_custom_configs + (prometheus_scrape_config_alertmanager if  alertmanager_install else []) + (prometheus_blackbox_config if blackbox_exporter_install else []) + (prometheus_mysql_exporter_config if mysqld_exporter_install else []) + (prometheus_postgres_exporter_config if postgres_exporter_install else [])+ (prometheus_local_cadvisor_config if cadvisor_install else [])}}"
prometheus_alerting_local:
  - scheme: http
    static_configs:
    - targets:
      - "localhost:9093"
prometheus_alerting_external:
  -   basic_auth:
          password: "{{external_alertmanager_password}}"
          username: "{{external_alertmanager_username}}"
      scheme: https
      static_configs:
      - targets:"{{external_alertmanager_targets}}"
prometheus_alertmanager_config: "{{ prometheus_alerting_local if alertmanager_install else prometheus_alerting_external }}"
# disable default prometheus rules https://github.com/prometheus-community/ansible/blob/main/roles/prometheus/defaults/main.yml#L105C1-L105C23
prometheus_alert_rules: []
# default rule files should be copied here {{ prometheus_config_dir }}/rules/
prometheus_default_rules_global:
  for: 15m
  receiver: on_call
  selector: ""
  severity: critical
  labels:
    organization: "{{ organization }}"
    project: "{{ project }}"
    env: "{{ env }}"
  disable: false #to disable alert
prometheus_default_rules_predefined:
  # - alertmanager.rules
  AlertmanagerIsDown:
  # - blackbox-exporter.rules
  BlackboxProbeFailed:
  BlackboxProbeHttpFailure:
  BlackboxSslCertificateWillExpireWithin30Days:
  BlackboxSslCertificateExpired:
  # - cadvisor.rules
  ContainerHighCpuUtilization:
    threshold: 80
  ContainerHighMemoryUsage:
    threshold: 80
  ContainerHighVolumeUsage:
    threshold: 80
  # - node-exporter.rules
  HighCpuUsage:
    threshold: 80
  HighDiskUsage:
    threshold: 80
  # - prometheus.rules
  PrometheusIsDown:
    disable: false
  PrometheusTargetDown:
    disable: false
  # - watchdog.rules
  Watchdog:
prometheus_default_rules_custom: {}

##
# Alertmanager role
# Default values: https://github.com/prometheus-community/ansible/blob/main/roles/alertmanager/defaults/main.yml
##
alertmanager_web_external_url: "{{ external_url_schema }}://{{ alertmanager_domain_name }}"
alertmanager_web_listen_address: '0.0.0.0:9093'

##
# NGINX role
# Default values: https://github.com/jdauphant/ansible-role-nginx/blob/master/defaults/main.yml
##
prometheus_certificate_name: tls.crt
prometheus_certificate_key_name: tls.key
alertmanager_certificate_name: "{{ prometheus_certificate_name }}"
alertmanager_certificate_key_name: "{{ prometheus_certificate_key_name }}"
grafana_certificate_name: "{{ prometheus_certificate_name }}"
grafana_certificate_key_name: "{{ prometheus_certificate_key_name }}"
certificates_dest: "/etc/nginx/ssl"
nginx_configs:
  proxy:
    - proxy_set_header X-Real-IP  $remote_addr
    - proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for
  gzip:
    - gzip on
    - gzip_disable msie6
  global:
    - client_max_body_size 5m
  misc:
    - server_names_hash_max_size 512
    - server_names_hash_bucket_size 128
nginx_remove_sites:
  - default
nginx_status_http:
  00-status:
    - listen 80
    - server_name 127.0.0.1
    - location / {
       deny all;
      }
    - location /nginx_status {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        deny all;
      }
nginx_status_https:
  00-status:
    - listen 80
    - server_name 127.0.0.1
    - ssl_protocols TLSv1.2 TLSv1.3
    - location / {
       deny all;
      }
    - location /nginx_status {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        deny all;
      }
nginx_grafana_http:
  07-grafana-80:
    - listen 80
    - server_name {{ grafana_domain_name }}
    - location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header   Host {{ grafana_domain_name }};
        proxy_set_header   X-FORWARDED_PROTO http;
        proxy_set_header   X-FORWARDED_PORT 80;
      }
nginx_grafana_https:
  07-grafana-443:
    - listen 443 ssl
    - server_name {{ grafana_domain_name }}
    - ssl_protocols TLSv1.2 TLSv1.3
    - ssl_certificate  {{ certificates_dest }}/{{ grafana_certificate_name }}
    - ssl_certificate_key {{ certificates_dest }}/{{ grafana_certificate_key_name }}
    - location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header   Host {{ grafana_domain_name }};
        proxy_set_header   X-FORWARDED_PROTO http;
        proxy_set_header   X-FORWARDED_PORT 80;
      }
nginx_prometheus_http:
  08-prometheus-80:
    - listen 80
    - server_name {{ prometheus_domain_name }}
    - auth_basic            "Restricted"
    - auth_basic_user_file  auth_basic/prometheus
    - location / {
        proxy_pass http://127.0.0.1:9090;
        proxy_set_header   X-FORWARDED_PROTO http;
        proxy_set_header   X-FORWARDED_PORT 80;
      }
nginx_prometheus_https:
  12-prometheus-443:
     - listen 443 ssl default_server
     - server_name {{ prometheus_domain_name }}
     - ssl_protocols TLSv1.2 TLSv1.3
     - ssl_certificate  {{ certificates_dest }}/{{ prometheus_certificate_name }}
     - ssl_certificate_key {{ certificates_dest }}/{{ prometheus_certificate_key_name }}
     - auth_basic            "Restricted"
     - auth_basic_user_file  auth_basic/prometheus
     - location / {
         proxy_pass http://127.0.0.1:9090;
         proxy_set_header   X-FORWARDED_PROTO https;
         proxy_set_header   X-FORWARDED_PORT 443;
       }
nginx_alertmanager_http:
  09-alertmanager-80:
    - listen 80
    - server_name {{ alertmanager_domain_name }}
    - auth_basic            "Restricted"
    - auth_basic_user_file  auth_basic/alertmanager
    - location / {
        proxy_pass http://127.0.0.1:9093;
        proxy_set_header   X-FORWARDED_PROTO http;
        proxy_set_header   X-FORWARDED_PORT 80;
      }
nginx_alertmanager_https:
  13-alertmanager-443:
     - listen 443 ssl
     - server_name {{ alertmanager_domain_name }}
     - ssl_protocols TLSv1.2 TLSv1.3
     - ssl_certificate  {{ certificates_dest }}/{{ alertmanager_certificate_name }}
     - ssl_certificate_key {{ certificates_dest }}/{{ alertmanager_certificate_key_name }}
     - auth_basic            "Restricted"
     - auth_basic_user_file  auth_basic/alertmanager
     - location / {
         proxy_pass http://127.0.0.1:9093;
         proxy_set_header   X-FORWARDED_PROTO https;
         proxy_set_header   X-FORWARDED_PORT 443;
       }
nginx_force_https:
  10-force-https:
     - listen 80 default_server
     - return 301 https://$host$request_uri
nginx_sites_default: "{{
          nginx_status_http
          | combine(nginx_grafana_http if (grafana_install| default(true)) else {})
          | combine(nginx_prometheus_http if (prometheus_install| default(false)) else {})
          | combine(nginx_alertmanager_http if (alertmanager_install| default(true)) else {})
        }}"
nginx_sites_default_https: "{{
          nginx_status_https
          | combine(nginx_force_https)
          | combine(nginx_grafana_https if (grafana_install| default(true)) else {})
          | combine(nginx_prometheus_https if (prometheus_install| default(false)) else {})
          | combine(nginx_alertmanager_https if (alertmanager_install| default(true)) else {})
        }}"
nginx_sites: "{% if not enable_tls %}{{ nginx_sites_default }}{% else %}{{ nginx_sites_default_https }}{% endif %}"
nginx_auth_basic_files:
  prometheus:
    - "{{ prometheus_web_login | default('') }}"
  alertmanager:
    - "{{ alertmanager_web_login | default('') }}"


##
# Grafana
# Default here: https://github.com/grafana/grafana-ansible-collection/blob/main/roles/grafana/defaults/main.yml
##
grafana_ini:
  security:
    admin_user: "{{grafana_admin_user | default('admin') }}"
    admin_password: "{{grafana_admin_pwd}}"

grafana_default_prometheus_datasource:
  - name: prometheus
    type: prometheus
    access: proxy
    url: 'http://127.0.0.1:9090'
    basicAuth: false
    isDefault: true
    version: 1
grafana_datasources: "{{
      (grafana_extra_datasources | default([]))
      + (grafana_default_prometheus_datasource if (prometheus_install | default(true)) else [])
    }}"
grafana_dashboards_dir: "/var/lib/grafana/dashboards"
grafana_dashboards_dir_to_copy: "{{ playbook_dir }}/files/grafana"
grafana_provisioning_dashboards_from_file_structure: true
grafana_provisioning_synced: false