---

#
# Install in Azure VM
#
- hosts: tag_vm_monitoring_azure
  become: yes
  serial: 50%

  vars:
    ansible_python_interpreter: /usr/bin/python3

  vars_files:
    - "environments/default_azure_monitoring.yml"
    - ["environments/{{env}}_azure_monitoring.yml","empty.yml"]

  pre_tasks:
    # Fix native debian 10 issue with signing key
    - name: Install gpg package
      ansible.builtin.apt:
        name: gpg
        state: present
        update_cache: false
    - name: Fix native debian issue with signing key
      ansible.builtin.apt_key:
        id: "{{ item }}"
        keyserver: keyserver.ubuntu.com
        state: present
      with_items:
       - 0E98404D386FA1D9
       - 6ED0E7B82643E131

    - name: Mount grafana disk (when locally installing grafana)
      block:
        - name: Get device name to use
          set_fact:
            device_name: "/dev/{{item}}"
          when: ansible_facts.devices.{{item}}.partitions == {}
          with_items: "{{ ansible_facts.devices}}"

        - name: Create partition on data disk
          parted:
            device: "{{device_name}}"
            number: 1
            state: present

        - name: Create a ext4 fs on data disk
          filesystem:
            fstype: ext4
            dev: "{{device_name}}1"

        - name: Get UUID for partition
          command: blkid -s UUID -o value "{{device_name}}1"
          register: disk_blkid

        - name: Create disk mount point
          file:
            state: directory
            path: /mysql-grafana
            mode: 0777

        - name: Mount data disk
          mount:
            path: "/mysql-grafana"
            src: "UUID={{disk_blkid.stdout}}"
            fstype: ext4
            state: mounted
      when: install_grafana

    # install ssl certificates for nginx
    - name: "Create SSL directory"
      file:
        path: "{{ certificates_dest }}"
        state: directory
      when: use_ssl | bool

    - name: "Install SSL certificates"
      copy:
        src: "{{ item }}"
        dest: "{{ certificates_dest }}"
        mode: 0600
      with_fileglob:
        - "{{ certificates_src }}"
      when: use_ssl | bool

    # create alertmanager custom rule files
    - name: Create the directory if it doesn't exist
      file:
        path: "/opt/prometheus/prometheus-data/"
        state: directory
      when: install_prometheus | bool

    - name: "Create custom alert rule file"
      template:
        src: templates/customer.rules
        dest: "/opt/prometheus/prometheus-data/{{customer}}.rules"
      when: install_prometheus | bool


  roles:
    # Install docker
    - role: geerlingguy.docker
      docker_packages:
        - "docker-{{ docker_edition }}"
        - "docker-{{ docker_edition }}-cli"
        - "containerd.io"
      tags:
        - docker

    # Install mysql - grafana database (if grafana creation enabled)
    # TODO: execute only once
    - role: geerlingguy.mysql
      mysql_datadir: "/mysql-grafana"
      mysql_root_password: "{{grafana_admin_password}}"
      mysql_databases:
        - name: "{{grafana_database_name}}"
      mysql_users:
        - name: "{{grafana_admin_user}}"
          password: "{{grafana_admin_password}}"
          priv: '*.*:ALL'
          host: '%'
      when: install_grafana
      tags:
        - mysql

    # Install prometheus, alertmanager and grafana
    - role: cycloid.prometheus
      path: /opt/prometheus
      tags:
        - prometheus

    # Monitoring client part
    - role: cycloid.telegraf
      tags:
        - telegraf

    # Install nginx
    - role: jdauphant.nginx
      tags:
        - nginx



#
# Install in AWS VM
#
- hosts: tag_vm_monitoring_aws
  become: yes
  serial: 50%

  vars:
    ansible_python_interpreter: /usr/bin/python3

  vars_files:
    - "environments/default_aws_monitoring.yml"
    - ["environments/{{env}}_aws_monitoring.yml","empty.yml"]

  pre_tasks:
    # install ssl certificates for nginx
    - name: "Create SSL directory"
      file:
        path: "{{ certificates_dest }}"
        state: directory
      when: use_ssl | bool

    - name: "Install SSL certificates"
      copy:
        src: "{{ item }}"
        dest: "{{ certificates_dest }}"
        mode: 0600
      with_fileglob:
        - "{{ certificates_src }}"
      when: use_ssl | bool

    # create alertmanager custom rule files
    - name: Create the directory if it doesn't exist
      file:
        path: "/opt/prometheus/prometheus-data/"
        state: directory
      when: install_prometheus | bool

    - name: "Create custom alert rule file"
      template:
        src: templates/customer.rules
        dest: "/opt/prometheus/prometheus-data/{{customer}}.rules"
      when: install_prometheus | bool


  roles:
    # Install docker
    - role: geerlingguy.docker
      docker_packages:
        - "docker-{{ docker_edition }}"
        - "docker-{{ docker_edition }}-cli"
        - "containerd.io"
      tags:
        - docker

    # Install prometheus, alertmanager and grafana
    - role: cycloid.prometheus
      path: /opt/prometheus
      tags:
        - prometheus

    # Monitoring client part
    - role: cycloid.telegraf
      tags:
        - telegraf

    # Install nginx
    - role: jdauphant.nginx
      tags:
        - nginx
