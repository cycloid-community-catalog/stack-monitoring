# Defines the set of alerts connected to cycloid healthcheck metrics
# Checks if:
# - concourse is down
# - elasticsearch is down
# - email is down
# - mysql is down
# - redis is down
# - redis_worker is down
# - vault is down

groups:
- name: cycloid_health_check.rules
  rules:
    {% for service in ['concourse', 'elasticsearch', 'email', 'mysql', 'redis', 'redisworker', 'vault'] %}
    {% set alert = service|capitalize ~ 'IsDown' %}
    {% set joined_config = prometheus_default_rules_global |
            combine(prometheus_default_rules_predefined.get(alert, {})) |
            combine(prometheus_default_rules_custom.get(alert, {})) %}
    {% if not joined_config['disable'] %}

    - alert: "{{ alert }}"
      expr: "health_status_{{ service }} == 0"
      for: "{{ joined_config['for'] }}"
      labels:
        organization: "{{ joined_config['organization'] }}"
        project: "{{ joined_config['project'] }}"
        env: "{{ joined_config['env'] }}"
        component: "{{ joined_config['component'] }}"
        severity: "{{ joined_config['severity'] }}"
        receiver: "{{ joined_config['receiver'] }}"
      annotations:
        summary: "{{ service }} service is Down"
        description: "The {{ service }} service is Down for {{ joined_config['for'] }}."
    {% endif %}
    {% endfor %}