---
  - name: Update apt cache (equivalent to apt-get update)
    apt:
      update_cache: yes

    # Install exporters
  - name: Install Blackbox exporter
    include_role:
      name: prometheus.prometheus.blackbox_exporter
    tags: blackbox_exporter
    when: blackbox_exporter_install

  - name: Install MYSQL exporter
    include_role:
      name: prometheus.prometheus.mysqld_exporter
    tags: mysqld_exporter
    when: mysqld_exporter_install

  - name: Install PostgreSQL exporter
    include_role:
      name: prometheus.prometheus.postgres_exporter
    tags: postgres_exporter
    when: postgres_exporter_install

  - name: Install Node exporter
    include_role:
      name: prometheus.prometheus.node_exporter
    tags: node_exporter
    when: node_exporter_install

  - name: Install Cadvisor exporter
    include_role:
      name: prometheus.prometheus.cadvisor
    tags: cadvisor
    when: cadvisor_install

  # Install Prometheus
  - name: Install Prometheus
    include_role:
      name: prometheus.prometheus.prometheus
    tags: prometheus
    when: prometheus_install

  - name: "Create custom alert rule file"
    template:
      src: templates/organization.rules
      dest: "{{ prometheus_config_dir }}/rules/{{organization}}.rules"
    when: prometheus_install | bool and prometheus_custom_rules != ""
    tags: prometheus

  - name: copy prometheus rules
    template: >
      src="templates/default-prometheus-rules/{{ item }}.j2"
      dest="{{ prometheus_config_dir }}/rules/{{ item }}"
    with_items: "{{ prometheus_default_rule_files }}"
    tags:
      - prometheus

  - name: Reload prometheus
    become: true
    ansible.builtin.systemd:
      daemon_reload: true
      name: prometheus
      state: restarted
      enabled: true
    tags:
      - prometheus

  # Install Alertmanager
  - name: Install Alertmanager
    include_role:
      name: prometheus.prometheus.alertmanager
    tags: alertmanager
    when: alertmanager_install

 # Install Grafana
  - name: Install Grafana
    include_role:
      name: grafana.grafana.grafana
    when: grafana_install
    tags: grafana

  - name: Copy stack grafana dashboards JSON files to the target directory
    copy:
      src: "{{ item }}"
      dest: "{{ grafana_data_dir }}/{{ grafana_dashboards_dir }}"
      mode: '0644'
    with_fileglob:
      - "{{ grafana_dashboards_files}}"
    when: grafana_install
    tags: grafana

  - name: Reload grafana
    become: true
    ansible.builtin.systemd:
      daemon_reload: true
      name: grafana
      state: restarted
      enabled: true
    tags:
      - grafana

  # Install NGINX
  # Install SSL certificates for nginx
  - name: "Create SSL directory"
    file:
      path: "{{ certificates_dest }}"
      state: directory
    when: enable_tls | bool
    tags: nginx

  - name: "Install SSL certificates"
    copy:
      src: "{{ item }}"
      dest: "{{ certificates_dest }}/{{ item | basename }}"
      mode: '0600'
    with_items:
      - "tls.crt"
      - "tls.key"
    when: enable_tls | bool
    tags: nginx

  - name: Install NGINX
    include_role:
      name: jdauphant.nginx
    tags: nginx