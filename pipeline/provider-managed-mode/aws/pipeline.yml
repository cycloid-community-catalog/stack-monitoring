shared:
  # Task-config (params/input added in job) : sync and merge with rsync 2 rep. Used to merge stack and config
  - &merge-stack-and-config
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: latest
    run:
      path: /usr/bin/merge-stack-and-config
    outputs:
      - name: merged-stack
        path: "merged-stack"

groups:
  - name: overview
    jobs:
      - terraform-plan
      - terraform-apply

  - name: destroy
    jobs:
      - terraform-destroy

resource_types:
  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: ((terraform_version))

resources:
  - name: tfstate
    type: terraform
    icon: terraform
    source:
      backend_type: http
      backend_config:
        address: '((cycloid_api_url))/inventory?jwt=($ inventory_jwt $)'
        skip_cert_verification: true
      env_name: ((env))
      vars:
        aws_access_key: ((aws_access_key))
        aws_secret_key: ((aws_secret_key))
        aws_role_arn: ((aws_role_arn))
        aws_region: ((aws_default_region))
        amp_alertmanager_definition: ((amp_alertmanager_definition))
        amp_alertmanager_rules: ((amp_alertmanager_rules))
        env: ((env))
        customer: ((customer))
        project: ((project))

  # The Terraform stack (will be merged with the config)
  - name: git_stack-terraform
    type: git
    source:
      uri:  ((stack_git_repository))
      branch: ((stack_git_branch))
      paths:
        - terraform/provider-managed-mode/aws/*

  - name: git_config-terraform
    type: git
    source:
      uri: ((config_git_repository))
      branch: ((config_git_branch))
      username: ((config_git_username))
      password: ((config_git_password))
      paths:
        - ((project))/terraform/provider-managed-mode/aws/((env))/*

jobs:
  - name: terraform-plan
    serial: True
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: git_stack-terraform
            trigger: true
          - get: git_config-terraform
            trigger: true

          - task: merge-stack-and-config
            config:
              <<: *merge-stack-and-config
              inputs:
                - name: git_config-terraform
                  path: "config"
                - name: git_stack-terraform
                  path: "stack"
            params:
              CONFIG_PATH: ((project))/terraform/provider-managed-mode/aws/((env))
              STACK_PATH: terraform/provider-managed-mode/aws

          - put: tfstate
            params:
              plan_only: true
              terraform_source: merged-stack/
            get_params:
              output_planfile: true

          #- put: terracost
          #  params:
          #    tfplan_path: tfstate/plan.json

  - name: terraform-apply
    serial: True
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          # Get the PR on the project #
          - get: git_stack-terraform
            trigger: false
            passed:
              - terraform-plan
          - get: git_config-terraform
            trigger: false
            passed:
              - terraform-plan
          - get: tfstate
            trigger: false
            passed:
              - terraform-plan

          - task: merge-stack-and-config
            config:
              <<: *merge-stack-and-config
              inputs:
                - name: git_config-terraform
                  path: "config"
                - name: git_stack-terraform
                  path: "stack"
            params:
              CONFIG_PATH: ((project))/terraform/provider-managed-mode/aws/((env))
              STACK_PATH: terraform/provider-managed-mode/aws

          - put: tfstate
            params:
              plan_run: true
              terraform_source: merged-stack/

  - name: terraform-destroy
    serial: True
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          # Get the PR on the project #
          - get: git_stack-terraform
            trigger: false
            passed:
              - terraform-apply
          - get: git_config-terraform
            trigger: false
            passed:
              - terraform-apply
          - get: tfstate
            trigger: false
            passed:
              - terraform-apply

          - task: merge-stack-and-config
            config:
              <<: *merge-stack-and-config
              inputs:
                - name: git_config-terraform
                  path: "config"
                - name: git_stack-terraform
                  path: "stack"
            params:
              CONFIG_PATH: ((project))/terraform/provider-managed-mode/aws/((env))
              STACK_PATH: stack-monitoring/terraform/provider-managed-mode/aws

          - put: tfstate
            params:
              action: destroy
              terraform_source: merged-stack/
            get_params:
              action: destroy